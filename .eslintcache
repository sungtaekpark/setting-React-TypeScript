[{"/Users/sungtaekpark/practice/eslint-prettier-typescript/src/App.tsx":"1"},{"size":1957,"mtime":1610508239635,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"p9aidq","/Users/sungtaekpark/practice/eslint-prettier-typescript/src/App.tsx",["6","7","8","9"],{"ruleId":"10","severity":1,"message":"11","line":6,"column":1,"nodeType":"12","messageId":"13","endLine":6,"endColumn":15},{"ruleId":"14","severity":1,"message":"15","line":7,"column":25,"nodeType":"16","messageId":"17","endLine":7,"endColumn":28,"suggestions":"18"},{"ruleId":"19","severity":1,"message":"20","line":83,"column":19,"nodeType":"21","messageId":"22","endLine":83,"endColumn":29},{"ruleId":"14","severity":1,"message":"15","line":83,"column":42,"nodeType":"16","messageId":"17","endLine":83,"endColumn":45,"suggestions":"23"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["24","25"],"@typescript-eslint/no-unused-vars","'setOptions' is assigned a value but never used.","Identifier","unusedVar",["26","27"],{"messageId":"28","fix":"29","desc":"30"},{"messageId":"31","fix":"32","desc":"33"},{"messageId":"28","fix":"34","desc":"30"},{"messageId":"31","fix":"35","desc":"33"},"suggestUnknown",{"range":"36","text":"37"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"36","text":"38"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"39","text":"37"},{"range":"39","text":"38"},[214,217],"unknown","never",[1783,1786]]